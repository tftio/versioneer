name: Release

on:
  push:
    tags:
      - 'versioneer-v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#versioneer-}
          echo "version=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version_number=$VERSION" >> $GITHUB_OUTPUT
      - name: Create Release
        run: |
          gh release create ${{ steps.version.outputs.version }} \
            --title "Versioneer ${{ steps.version.outputs.version_number }}" \
            --generate-notes \
            --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # Binary name (matches the name in Cargo.toml)
          bin: versioneer
          # Target platform (one per matrix job)
          target: ${{ matrix.target }}
          # Include additional files in the release archive
          include: LICENSE,README.md
          # Use zip compression for all platforms
          tar: none
          tar-xz: none
          zip: all
          # Generate SHA256 checksums for security verification
          checksum: sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

